// Generated by gencpp from file experiment/RecordVisuals.msg
// DO NOT EDIT!


#ifndef EXPERIMENT_MESSAGE_RECORDVISUALS_H
#define EXPERIMENT_MESSAGE_RECORDVISUALS_H

#include <ros/service_traits.h>


#include <experiment/RecordVisualsRequest.h>
#include <experiment/RecordVisualsResponse.h>


namespace experiment
{

struct RecordVisuals
{

typedef RecordVisualsRequest Request;
typedef RecordVisualsResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct RecordVisuals
} // namespace experiment


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::experiment::RecordVisuals > {
  static const char* value()
  {
    return "c4ae6a3a033f02c4bebe23d459ae79eb";
  }

  static const char* value(const ::experiment::RecordVisuals&) { return value(); }
};

template<>
struct DataType< ::experiment::RecordVisuals > {
  static const char* value()
  {
    return "experiment/RecordVisuals";
  }

  static const char* value(const ::experiment::RecordVisuals&) { return value(); }
};


// service_traits::MD5Sum< ::experiment::RecordVisualsRequest> should match 
// service_traits::MD5Sum< ::experiment::RecordVisuals > 
template<>
struct MD5Sum< ::experiment::RecordVisualsRequest>
{
  static const char* value()
  {
    return MD5Sum< ::experiment::RecordVisuals >::value();
  }
  static const char* value(const ::experiment::RecordVisualsRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::experiment::RecordVisualsRequest> should match 
// service_traits::DataType< ::experiment::RecordVisuals > 
template<>
struct DataType< ::experiment::RecordVisualsRequest>
{
  static const char* value()
  {
    return DataType< ::experiment::RecordVisuals >::value();
  }
  static const char* value(const ::experiment::RecordVisualsRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::experiment::RecordVisualsResponse> should match 
// service_traits::MD5Sum< ::experiment::RecordVisuals > 
template<>
struct MD5Sum< ::experiment::RecordVisualsResponse>
{
  static const char* value()
  {
    return MD5Sum< ::experiment::RecordVisuals >::value();
  }
  static const char* value(const ::experiment::RecordVisualsResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::experiment::RecordVisualsResponse> should match 
// service_traits::DataType< ::experiment::RecordVisuals > 
template<>
struct DataType< ::experiment::RecordVisualsResponse>
{
  static const char* value()
  {
    return DataType< ::experiment::RecordVisuals >::value();
  }
  static const char* value(const ::experiment::RecordVisualsResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // EXPERIMENT_MESSAGE_RECORDVISUALS_H
