// Generated by gencpp from file experiment/SimpleMovement.msg
// DO NOT EDIT!


#ifndef EXPERIMENT_MESSAGE_SIMPLEMOVEMENT_H
#define EXPERIMENT_MESSAGE_SIMPLEMOVEMENT_H

#include <ros/service_traits.h>


#include <experiment/SimpleMovementRequest.h>
#include <experiment/SimpleMovementResponse.h>


namespace experiment
{

struct SimpleMovement
{

typedef SimpleMovementRequest Request;
typedef SimpleMovementResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct SimpleMovement
} // namespace experiment


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::experiment::SimpleMovement > {
  static const char* value()
  {
    return "4fe5af303955c287688e7347e9b00278";
  }

  static const char* value(const ::experiment::SimpleMovement&) { return value(); }
};

template<>
struct DataType< ::experiment::SimpleMovement > {
  static const char* value()
  {
    return "experiment/SimpleMovement";
  }

  static const char* value(const ::experiment::SimpleMovement&) { return value(); }
};


// service_traits::MD5Sum< ::experiment::SimpleMovementRequest> should match 
// service_traits::MD5Sum< ::experiment::SimpleMovement > 
template<>
struct MD5Sum< ::experiment::SimpleMovementRequest>
{
  static const char* value()
  {
    return MD5Sum< ::experiment::SimpleMovement >::value();
  }
  static const char* value(const ::experiment::SimpleMovementRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::experiment::SimpleMovementRequest> should match 
// service_traits::DataType< ::experiment::SimpleMovement > 
template<>
struct DataType< ::experiment::SimpleMovementRequest>
{
  static const char* value()
  {
    return DataType< ::experiment::SimpleMovement >::value();
  }
  static const char* value(const ::experiment::SimpleMovementRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::experiment::SimpleMovementResponse> should match 
// service_traits::MD5Sum< ::experiment::SimpleMovement > 
template<>
struct MD5Sum< ::experiment::SimpleMovementResponse>
{
  static const char* value()
  {
    return MD5Sum< ::experiment::SimpleMovement >::value();
  }
  static const char* value(const ::experiment::SimpleMovementResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::experiment::SimpleMovementResponse> should match 
// service_traits::DataType< ::experiment::SimpleMovement > 
template<>
struct DataType< ::experiment::SimpleMovementResponse>
{
  static const char* value()
  {
    return DataType< ::experiment::SimpleMovement >::value();
  }
  static const char* value(const ::experiment::SimpleMovementResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // EXPERIMENT_MESSAGE_SIMPLEMOVEMENT_H
